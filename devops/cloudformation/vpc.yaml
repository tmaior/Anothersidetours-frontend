AWSTemplateFormatVersion: '2010-09-09'
Description: Sets up vpc

Parameters:    
  ProjectName:
    Type: String

  CidrIp:
    Description: Cidr Ip
    Type: String
    Default: 10.10.0.0
    
  PublicSubnet1Ip:
    Type: String
    Default: 10.10.10.0
    
  PrivateSubnet1Ip:
    Type: String
    Default: 10.10.30.0
    
  PublicSubnet2Ip:
    Type: String
    Default: 10.10.50.0
    
  PrivateSubnet2Ip:
    Type: String
    Default: 10.10.70.0
    
Resources: 
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '${CidrIp}/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-vpc'
          
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-IGVPC'
          
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
      
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Sub '${PublicSubnet1Ip}/24'
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PublicSubnet1'
          
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Sub '${PublicSubnet2Ip}/24'
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs': !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PublicSubnet2'
          
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PublicRouteTable'
          
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      
  PublicSubnet1Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
      
  PublicSubnet2Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
      
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Sub '${PrivateSubnet1Ip}/24'
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PrivateSubnet1'
          
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Sub '${PrivateSubnet2Ip}/24'
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs': !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PrivateSubnet2'
          
  EIP:
    Type: 'AWS::EC2::EIP'
    DependsOn: InternetGateway
    Properties:
      Domain: vpc
      
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !Sub '${EIP.AllocationId}'
      
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PrivateRouteTable'
          
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTable
      NatGatewayId: !Ref NatGateway
      
  PrivateSubnet1Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
      
  PrivateSubnet2Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable
      
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub '${ProjectName}-VPC'

  VPCCidrBlock:
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub '${ProjectName}-VPCCidrBlock'
      
  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${ProjectName}-PublicSubnet1'
      
  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${ProjectName}-PublicSubnet2'
      
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${ProjectName}-PrivateSubnet1'
      
  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${ProjectName}-PrivateSubnet2'